# If want to input None, use !!null

# Resume Training, start from scratch or resume training
resume_train: False
load_epoch: 15      #begin from 1
load_hash_loop: 0


# Learning Parameters
n_epochs: 10
learning_rate: 0.0001  
lr_policy: step  # def: step or auto
lr_adapt_threshold: 0.01
lr_step: [5, 10]  # def: 10, learning rate will be reduced by 10 times at these steps

# Data
use_data_layer: False
rand_crop: False # def: True
shuffle: True # def: False, if shuffle the batches
para_load: False
batch_crop_mirror: False  # if False, do randomly on each image separately
finetune: True

# Momentum
use_momentum : True # def: True
use_nesterov_momentum: False # def: False
momentum: 0.9 # def: 0.9

print_train_error: True
print_freq: 20  # frequency of printing training error rate

# Weight Decay
weight_decay: 0.0005 # def: 0.0005

# Directories
mean_file: ./data/img_mean.npy
finetune_weights_dir: ./pretrained_model/vggnet/
weights_dir: ./models/
train_folder: ./preprocessed_data/train_hkl/
code_save_dir: ./

# bias
bias: 0.00001

# conv library
lib_conv: cudnn  # or cudaconvnet


#GPU
gpu: 'gpu0'
sock_data: 5001

batch_size: 50 # def: 256
